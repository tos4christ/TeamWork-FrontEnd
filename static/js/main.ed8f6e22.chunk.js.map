{"version":3,"sources":["Footer.js","Components/Header.js","Components/Form.js","Components/Admin.js","Components/Home.js","Components/SignInComponent.js","Components/PostArticle.js","Components/PostGif.js","Components/Comment.js","Components/Article.js","Components/Articles.js","Components/Employee.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","React","Component","Header","props","setHead","state","headerState","ls","remove","setState","headerRoute","console","log","get","this","prevState","to","onClick","withRouter","Form","handleSubmit","e","preventDefault","data","firstName","value","lastName","email","password","gender","jobRole","department","address","fetch","method","body","JSON","stringify","headers","token","mode","then","res","json","response","history","push","onSubmit","type","name","placeholder","ref","input","required","CreateEmployee","match","url","path","component","Home","headerStateChange","route","logged","render","SignIn","handleSubmission","result","setToken","userId","admin","checked","emp","catch","error","set","PostArticle","title","article","articleClass","rows","cols","PostGif","showImage","target","files","URL","createObjectURL","img","imgClass","onChange","src","alt","Comment","flag","up","down","status","id","refresh","delete","commentId","comment","commentid","articleId","countUp","countDown","newDate","Date","createdoon","authorid","Article","countComment","comments","count","length","reveal","commentClass","commentArray","filter","check","getParamsArticle","newArticle","params","forEach","key","linked","tag","Articles","getAllArticles","articles","Employee","employee","exact","App","Admin","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed8f6e22.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"footer\"> \r\n        <h1> Powered by teamworksng v1. </h1>\r\n        <p>Contact us: +23490089</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './css/Header.css';\r\nimport {NavLink, Link, withRouter} from 'react-router-dom';\r\nimport ls from 'local-storage';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headerRoute: '',\r\n      headerState: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('again')\r\n    if (ls.get('token')) {\r\n      this.setState((prevState) => {\r\n        prevState.headerState = 'Sign Out';\r\n        prevState.headerRoute = '/signout';\r\n        return {\r\n          headerRoute: prevState.headerRoute,\r\n          headerState: prevState.headerState\r\n        }\r\n      })\r\n    } else this.setState({headerRoute: '/api/v1/auth/signin', headerState: 'Sign In'});\r\n  }\r\n  setHead = () => {\r\n    if (this.state.headerState === 'Sign Out') {\r\n      ls.remove('token');\r\n      this.setState({headerState: 'Sign In'})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <span className='icn-logo'> <i className='material-icons'>code</i> </span>\r\n        <p className='headerText'><Link to='/api/v1/'>TeamWorks Ng </Link></p>\r\n        <ul className=\"main-nav\">\r\n          <li> <NavLink to='/api/v1/feeds'>About</NavLink></li>\r\n          <li><NavLink to='/api/v1/articles'> Contact Admin </NavLink></li>\r\n          <li><NavLink to='/api/v1/gifs'>Tour</NavLink></li>\r\n          <li onClick={this.setHead}><NavLink to={this.state.headerRoute}>{this.state.headerState}</NavLink></li>\r\n        </ul>\r\n      </header>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n\r\n  // componentDidMount() {\r\n  //   this.headerStateChange('/', 'Sign Out');\r\n  // }\r\n\r\n  // headerStateChange = (route, logged) => {\r\n  //   this.props.headerState(route, logged);\r\n  // }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      firstName: this.firstName.value,\r\n      lastName: this.lastName.value,\r\n      email: this.email.value,\r\n      password: this.password.value,\r\n      gender: this.gender.value,\r\n      jobRole: this.jobRole.value,\r\n      department: this.department.value,\r\n      address: this.address.value\r\n    }\r\n    const url = 'https://teamworksng.herokuapp.com/api/v1/auth/create-user';\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \"+ this.props.token\r\n      },\r\n      mode: 'cors'\r\n    })\r\n    .then( res => res.json())\r\n    .then ( response => {\r\n      console.log(response);\r\n      const path = '/admin';\r\n      this.props.history.push(path)\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form className=\"create\" onSubmit={this.handleSubmit}>\r\n            <h3> Create New Employee Profile</h3>\r\n            <label>\r\n              <input type='text' name='firstName' placeholder='First Name' ref={(input) => this.firstName = input}/>\r\n            </label><br />\r\n            <label>\r\n              <input type='text' name='lastName' placeholder='Last Name' ref={(input) => this.lastName = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <input type='email' name='email' placeholder='Email' ref={(input) => this.email = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <input type='password' name='password' placeholder='Temporary Password' ref={(input) => this.password = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <p>Gender</p>\r\n              <select name='gender' ref={(input) => this.gender = input}>\r\n                <option value='Male'>Male</option>\r\n                <option value='Female'>Female</option>\r\n              </select>\r\n            </label><br /><br />\r\n            <label>\r\n              <input type='text' name='jobRole' placeholder='Job Role' ref={(input) => this.jobRole = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <input type='text' name='department' placeholder='Department' ref={(input) => this.department = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <input type='text' name='address' placeholder='Address' ref={(input) => this.address = input} required/> \r\n            </label> <br />\r\n            <label>\r\n              <input type='submit' value='Submit' />\r\n            </label>\r\n          </form>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './css/CreateEmployee.css';\r\nimport { Route, NavLink, withRouter } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\nclass CreateEmployee extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <h1 className='rule dashhead'><span className='material-icons'>dashboard</span> Dashboard</h1>\r\n        <div className='rule dashboard'>\r\n          <button> <i className='material-icons md-10'>edit</i><span> Edit Profile</span> </button>\r\n          <button> <NavLink to='/admin/changePassword'><i className='material-icons md-10'>restore</i> <span> Change Password</span></NavLink> </button>\r\n        \r\n       <button><NavLink to={`${this.props.match.url}/createUser`}><i className='material-icons md-10'>how_to_reg</i> <span>New Employee</span></NavLink></button>\r\n       <button><i className='material-icons md-10'>delete</i> <span> Delete Articles</span></button>\r\n       <button><i className='material-icons md-10'>delete</i> <span> Delete Gifs</span> </button>\r\n       <button><i className='material-icons md-10'>delete</i> <span> Delete Comments </span></button>\r\n        </div>\r\n\r\n        <Route path={`${this.props.match.url}/createUser`} component={Form} />  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateEmployee);\r\n","import React from 'react';\r\nimport { Route, Redirect} from 'react-router-dom';\r\nimport './css/Home.css';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logged: 'Sign-in',\r\n      route: '/'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.headerStateChange(this.state.route, this.state.logged)\r\n  }\r\n  headerStateChange = (route, logged) => {\r\n    this.props.headerState(route, logged);\r\n  }\r\n  render() {\r\n    return (  \r\n      <div className='homepage'>\r\n         \r\n          <Route path='/api/v1' render={() => <Redirect to='/api/v1/auth/signin' />} />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React from 'react';\r\nimport './css/SignIn.css';\r\nimport {withRouter} from 'react-router';\r\nimport ls from 'local-storage';\r\n\r\nclass SignIn extends React.Component {\r\n  handleSubmission = (e) => {\r\n    e.preventDefault();\r\n    const url = \"https://teamworksng.herokuapp.com/api/v1/auth/signin\";\r\n    const data = {email: this.email.value, password: this.password.value}\r\n    fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.setToken(result.data.token, result.data.userId);\r\n      if(this.admin.checked) {\r\n        this.props.history.push('/api/v1/admin');\r\n      } else if(this.emp.checked) {\r\n        this.props.history.push('/api/v1/employee');\r\n      } \r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  setToken = (token, userId) => {\r\n    ls.set('token', token);\r\n    ls.set('userId', userId)\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"signinBody\"> \r\n        <form onSubmit={this.handleSubmission}>\r\n            <h2>Sign In</h2>\r\n            <label>\r\n              <input type=\"email\" placeholder=\"type your email....\" ref={(input) => this.email = input}></input>\r\n            </label>\r\n            <label>\r\n              <input type=\"password\" placeholder=\"type your password....\" ref={(input) => this.password = input}></input>\r\n            </label><br/>\r\n            <label>\r\n              <span><input type=\"radio\" name='role' value='admin' ref={(input) => this.admin = input} required/> Admin</span>\r\n              <span><input type=\"radio\" name='role' value='employee' ref={(input) => this.emp = input} required/> Employee</span>\r\n            </label><br />\r\n            <label>\r\n              <input type=\"submit\" />\r\n            </label>\r\n          </form> \r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default withRouter(SignIn);\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PostArticle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      article: '',\r\n      articleClass: 'hidden'\r\n    }\r\n  }\r\n  handleSubmission = (e) => {  \r\n    e.preventDefault()  ;\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles`;\r\n    const data = {title: this.title.value, article: this.article.value};\r\n    fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then( res => res.json())\r\n    .then( response => {\r\n      this.props.history.push('/api/v1/employee/articles/get');\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='articlePost'>\r\n        <form onSubmit={this.handleSubmission}>\r\n          <h3>Post an Article</h3>\r\n          <label>\r\n          <input type='text' name='title' placeholder='Title' ref={(input) => this.title = input}/>\r\n          </label>\r\n          <label>\r\n          <textarea name='article' ref={(input) => this.article = input} rows='20' cols='100' placeholder='Article' />\r\n          </label><br />\r\n          <button className='button' type='submit'> Post Article</button>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(PostArticle);\r\n","import React from 'react';\r\n\r\nclass PostGif extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: '',\r\n      imgClass: 'hidden'\r\n    }\r\n  }\r\n  \r\n  showImage = (e) => {\r\n    if(e.target.files[0]) {\r\n      const path = URL.createObjectURL(e.target.files[0]);\r\n      this.setState((prevState) => {\r\n        prevState.img = path;\r\n        prevState.imgClass = 'seen';\r\n        return {\r\n          img: prevState.img,\r\n          imgClass: prevState.imgClass\r\n        }\r\n      });\r\n    } else if(!e.target.files[0]) {\r\n      this.setState({\r\n        img: '',\r\n        imgClass: 'hidden'\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className='gifPost'>\r\n        <p> Gif Title</p>\r\n        <input type='file' name='gifPost' ref={(input) => this.img = input} onChange={this.showImage} /><br />\r\n        <img src={this.state.img} className={this.state.imgClass} alt='gif upload'/>\r\n        <button className='button'> Upload </button>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default PostGif;\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\n\r\nclass Comment extends React.Component {\r\n  state = {\r\n    flag: '',\r\n    up: 0,\r\n    down: 0,\r\n    status: '',\r\n    id: 0\r\n  }\r\n  componentDidMount() {\r\n    this.setState({id: this.props.articleId})\r\n  }\r\n  flag = () => {\r\n    this.setState({flag: this.state.flag === '' ? 'flag' : ''})\r\n  }\r\n  refresh = (id) => {\r\n    this.props.refresh(id);\r\n  }\r\n  delete = () => {\r\n    const commentId = this.props.comment.commentid;\r\n    const articleId = this.props.articleId\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles/${articleId}/commented/${commentId}`;\r\n    fetch(url, {\r\n      method: 'DELETE',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      const id = this.props.comment.commentid;\r\n      this.refresh(id);\r\n    })\r\n  }\r\n  countUp = () => {\r\n    this.setState((prevState) => {\r\n      prevState.up += 1;\r\n      return {\r\n        up: prevState.up\r\n      }\r\n    });\r\n  }\r\n  countDown = () => {\r\n    this.setState((prevState) => {\r\n      prevState.down += 1;\r\n      return {\r\n        down: prevState.down\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    const newDate = Date(this.props.comment.createdoon)\r\n    return (\r\n      <div className='commentDiv'>\r\n        <span>{this.props.comment.authorid} {this.props.comment.commentid} </span>\r\n        <p>{this.props.comment.comment} </p>\r\n        <span>{newDate}</span>\r\n        <div className='icons'>\r\n          <span onClick={this.countUp} ><i className=\"fas fa-thumbs-up fa-1x\" />{this.state.up} </span>\r\n          <span onClick={this.countDown}><i className=\"fas fa-thumbs-down fa-1x\" />{this.state.down} </span>\r\n          <span onClick={this.flag}><i className={`fas fa-flag fa-1x ${this.state.flag}`} /> </span>\r\n          <span><i className=\"fas fa-comment fa-1x\" /></span>\r\n          <span onClick={this.delete} ><i className=\"fas fa-minus-circle fa-1x\"></i> </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport Comment from './Comment';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport ls from 'local-storage';\r\n\r\nclass Article extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      up: 0,\r\n      down: 0,\r\n      flag: '',\r\n      commentClass: 'hidden',\r\n      id: 0,\r\n      article: '',\r\n      refresh: false\r\n    }\r\n    this.newArticle = ''\r\n  }\r\n  countComment = () => {\r\n    if(this.props.article.comments) {\r\n      console.log('seen')\r\n      const count = this.props.article.comments.length\r\n      this.setState({\r\n        comment: count\r\n      })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if(this.props.match.params.id) {\r\n      this.getParamsArticle(this.props.match.params.id);\r\n    } else {\r\n      this.setState({\r\n        id: this.props.article.id,\r\n        article: this.props.article\r\n      });\r\n    }\r\n  }\r\n  reveal = () => {\r\n    this.setState({\r\n      commentClass: this.state.commentClass === 'seen' ? 'hidden' : 'seen'\r\n    });\r\n  }\r\n  flag = () => {\r\n    this.setState({flag: this.state.flag === '' ? 'flag' : ''})\r\n  }\r\n  countUp = () => {\r\n    this.setState((prevState) => {\r\n      prevState.up += 1;\r\n      return {\r\n        up: prevState.up\r\n      }\r\n    });\r\n  }\r\n  countDown = () => {\r\n    this.setState((prevState) => {\r\n      prevState.down += 1;\r\n      return {\r\n        down: prevState.down\r\n      }\r\n    });\r\n  }\r\n  refresh = (id) => {\r\n    // if (this.props.refresh) {\r\n    //   this.props.refresh();\r\n    // }\r\n    const ids = this.state.article.id;\r\n    const commentArray = this.state.article.comments.filter( comment => comment.commentid !== id);\r\n    this.setState((prevState) => {\r\n      prevState.article.comments = commentArray;\r\n      return {\r\n        article: prevState.article\r\n      }\r\n    })\r\n    \r\n  }\r\n  check = () => {\r\n      ls.set('singleArticle', this.props.article);\r\n  }\r\n  delete = () => {\r\n    const articleId = this.state.id\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles/${articleId}`;\r\n    fetch(url, {\r\n      method: 'DELETE',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.refresh();\r\n      this.props.history.push('/api/v1/employee/articles/get')\r\n    })\r\n  }\r\n  getParamsArticle = (id) => {\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles/${id}`;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.setState({\r\n        article: result.data\r\n      });\r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  render() {\r\n    let article;\r\n    if (this.props.match.params.id && this.state.article) {\r\n      article = this.state.article;\r\n    } else  {\r\n      article = this.props.article;\r\n    }\r\n    let comment = 0\r\n    if(article.comments) {\r\n      comment = article.comments.length;\r\n      this.commentArray = [];\r\n      const comments = article.comments.filter( (comment, count) => count <= 10)\r\n      comments.forEach(comment => this.commentArray.push(<Comment comment={comment} key={comment.commentid} articleId={article.id} refresh={this.refresh} />));\r\n    }\r\n    return (\r\n      <div className='article-container'>\r\n        <div className='article'>\r\n      { this.props.linked === 'true' ? <Link to={`${this.props.match.path}/${this.props.article.id}`} onClick={this.check}><h2>{article.title}</h2></Link> : <h2>{article.title}</h2> }\r\n          <p>{article.article }  <span> &nbsp; { article.id} </span> {article.tag? <span>&nbsp;  Tags: {article.tag}</span> : ''}</p> \r\n          \r\n        </div>\r\n        <div className='icons'>\r\n          <span onClick={this.countUp} ><i className=\"fas fa-thumbs-up fa-1x\" />{this.state.up} </span>\r\n          <span onClick={this.countDown}><i className=\"fas fa-thumbs-down fa-1x\" />{this.state.down} </span>\r\n          <span onClick={this.flag}><i className={`fas fa-flag fa-1x ${this.state.flag}`} /> </span>\r\n          <span onClick={this.reveal}><i className=\"fas fa-comment fa-1x\" />{comment}</span>\r\n          <span onClick={this.delete} ><i className=\"fas fa-minus-circle fa-1x\"></i> </span>\r\n        </div>\r\n        <div className={this.state.commentClass+` comments`}>\r\n          <ul>\r\n            {this.commentArray}\r\n          </ul>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Article);\r\n","import React from 'react';\r\nimport Article from './Article';\r\nimport ls from 'local-storage';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Articles extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      article: ''\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getAllArticles();\r\n  }\r\n  refresh = () => {\r\n    this.getAllArticles();\r\n  }\r\n  getAllArticles = () => {\r\n    const userId = ls.get('userId');\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles/all/${userId}`;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.setState((prevState) => {\r\n        prevState.article = result.data.articles;\r\n        return {\r\n          article: prevState.article\r\n        }\r\n      });\r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  render() {\r\n      let articles = []\r\n      if(this.state.article) {\r\n        const articlePage = this.state.article.filter( (article, count) => count <= 10)\r\n        articlePage.forEach(article => articles.push(<Article article={article} key={article.id} refresh={this.refresh} linked={'true'} />));\r\n      }\r\n    return (\r\n      <div className='articles'>\r\n        {articles}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Articles);\r\n","import React from 'react';\r\nimport {Route, NavLink, withRouter} from 'react-router-dom';\r\nimport PostArticle from './PostArticle';\r\nimport PostGif from './PostGif';\r\nimport Articles from './Articles';\r\nimport Article from './Article';\r\nimport ls from 'local-storage';\r\n\r\nclass Employee extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      employee: 'Oluwatosin Fetuga'\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h1 className='rule dashhead'><span className='material-icons'>dashboard</span> Dashboard</h1>\r\n          <div className='employee-dashboard'>\r\n           <h3> Welcome {this.state.employee} </h3>\r\n           \r\n            <div className='rule dashboard'>\r\n              <button><NavLink to={`${this.props.match.url}/profile`}> <i className='material-icons md-10'>edit</i> <span>Edit Profile</span></NavLink></button>\r\n              <button><NavLink to={`${this.props.match.url}/gifs/get`}> <i className='material-icons md-10'>photo</i><span>My Gifs</span></NavLink> </button>\r\n              <button><NavLink to={`${this.props.match.url}/articles/get`}><i className='material-icons md-10'></i><span>My Articles</span></NavLink></button>\r\n              <button><NavLink to={`${this.props.match.url}/gifs`}><i className='material-icons md-10'>image</i><span>Post a Gif</span></NavLink></button>\r\n              <button><NavLink to={`${this.props.match.url}/articles`}><i className='material-icons md-10'></i><span>Post an Article</span></NavLink></button>\r\n              <button><i className='material-icons md-10'></i><span>Get Feeds</span></button>\r\n            </div>\r\n          </div>\r\n          <div className='display'>  \r\n          </div>\r\n        </div>\r\n        <Route path={`${this.props.match.path}/gifs`}> <PostGif /> </Route>\r\n        <Route exact path={`${this.props.match.path}/articles`}> <PostArticle /></Route>\r\n        <Route exact path={`${this.props.match.path}/articles/get`}> <Articles check={this.check} /></Route>\r\n        <Route path={`${this.props.match.path}/articles/get/:id`}> <Article article={ls.get('singleArticle')} linked={'false'} /></Route>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Employee);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Footer from './Footer';\r\nimport Header from './Components/Header';\r\nimport Admin from './Components/Admin';\r\nimport {HashRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\nimport Home from './Components/Home';\r\nimport SignIn from './Components/SignInComponent';\r\nimport Employee from './Components/Employee';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n        \r\n          <Switch >\r\n            <Route exact path='/api/v1' render={() => <Home /> }  />\r\n            <Route exact path='/signout' render={() => <Redirect to='/api/v1/auth/signin' /> }  />\r\n            <Route exact path='/api/v1/auth/signin' render={() => <SignIn /> }  />\r\n            <Route path='/api/v1/admin' render={() => <Admin />} />          \r\n            <Route path='/api/v1/employee' render={ () => <Employee />} />\r\n          </Switch>\r\n          \r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}