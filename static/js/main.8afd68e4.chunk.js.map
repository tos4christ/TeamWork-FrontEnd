{"version":3,"sources":["Footer.js","Components/Header.js","Components/Forms/Form.js","Components/Admin.js","Components/Home.js","Components/SignInComponent.js","Components/Articles/PostArticle.js","Components/Gifs/PostGif.js","Components/Comment.js","Components/PostComment.js","Components/Articles/Article.js","Components/Logic/Sort.js","Components/Articles/Articles.js","Components/Articles/SingleArticle.js","Components/Gifs/Gif.js","Components/Gifs/Gifs.js","Components/Gifs/SingleGif.js","Components/Feeds/FeedPage.js","Components/Profile.js","Components/Chat.js","Components/Employee.js","Components/SignOut.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","React","Component","a11yProps","index","id","Header","props","handleChange","event","newValue","setState","value","state","route","heading","location","this","pathname","ls","get","AppBar","position","color","Tabs","onChange","variant","scrollButtons","indicatorColor","textColor","aria-label","to","Tab","label","icon","AccountCircle","Navigation","ContactPhone","withRouter","Form","handleSubmit","e","preventDefault","data","firstName","lastName","email","password","gender","jobRole","department","address","fetch","method","body","JSON","stringify","headers","mode","then","res","json","response","console","log","history","push","onSubmit","type","name","placeholder","ref","input","required","CreateEmployee","match","url","path","component","Home","SignIn","handleSubmission","result","set","allDetails","profile_pic","setToken","token","userId","userName","admin","checked","emp","catch","error","setTimeout","remove","noValidate","autoComplete","TextField","inputRef","autoFocus","disabled","PostArticle","title","article","tag","select","articleId","articleClass","rows","cols","PostGif","postGif","formData","FormData","append","target","files","showImage","URL","createObjectURL","prevState","img","imgClass","encType","accept","src","alt","Comment","flag","up","down","status","Id","removeComment","deleteComment","commentId","comment","commentid","countUp","countDown","newDate","Date","createdon","authorid","onClick","PostComment","uri","item","display","addComment","style","column","Article","reveal","commentClass","comm","comments","filter","delete","undefined","length","newComm","Comments","commentArray","count","forEach","key","params","author","Sort","check","margin","Articles","nextPage","lower","upper","previousPage","getAllArticles","articles","isLoaded","sort","order","filterArticle","filterText","search","start","includes","SingleArticle","getAnArticle","Gif","gifId","gif","Gifs","getAllGifs","filterGif","gifs","SingleGif","getAGif","FeedPage","getFeeds","feeds","feedPage","element","Profile","getProfile","profile","uploadPic","imageUrl","pp","pic","profilePic","user","setProfilePic","Chat","Container","maxWidth","Typography","backgroundColor","height","chat","Employee","setPic","employee","width","heigth","exact","render","SignOut","App","setHead","setOut","Admin","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8afd68e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Components/CSS/Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"footer\"> \r\n        <h1> Powered by teamworksng v1. </h1>\r\n        <p>Contact us: +23490089</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {NavLink, Link, withRouter} from 'react-router-dom';\r\nimport ls from 'local-storage';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {ContactPhone} from '@material-ui/icons';\r\nimport {Navigation} from '@material-ui/icons';\r\nimport {AccountCircle} from '@material-ui/icons';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\r\nimport ThumbDown from '@material-ui/icons/ThumbDown';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0\r\n    }\r\n  }\r\n  handleChange = (event, newValue) => {\r\n    this.setState({value: newValue});\r\n  };\r\n  render() {\r\n    let route, heading;\r\n    const location = this.props.location.pathname;\r\n    if(location === '/' || location === '/api/v1/auth/signin' || location === '/signout' || !ls.get('token')) {\r\n      route = '/api/v1/auth/signin';\r\n      heading = 'Sign In';\r\n    } else {\r\n      route = '/signout';\r\n      heading = 'Sign Out';\r\n    }\r\n    const { value } = this.state; \r\n    return (  \r\n      <div> \r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={this.handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <NavLink to={route}> <Tab label={heading} icon={<AccountCircle />} {...a11yProps(0)}  /> </NavLink>\r\n          <NavLink to='/tour'> <Tab label=\"Tour\" icon={<Navigation />} {...a11yProps(1)} /> </NavLink>\r\n          <NavLink to='/contact'> <Tab label=\"Contact\" icon={<ContactPhone />} {...a11yProps(2)} /> </NavLink>\r\n          <NavLink to='/about'> <Tab label=\"About\" icon={<HelpIcon />} {...a11yProps(3)} /> </NavLink>\r\n          {/* <Tab label=\"Item Five\" icon={<ShoppingBasket />} {...a11yProps(4)} />\r\n          <Tab label=\"Item Six\" icon={<ThumbDown />} {...a11yProps(5)} />\r\n          <Tab label=\"Item Seven\" icon={<ThumbUp />} {...a11yProps(6)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n     \r\n      {/* <TabPanel value={value} index={0}>\r\n        {heading}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Tour\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Contact\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        About\r\n      </TabPanel> */}\r\n      {/* <TabPanel value={value} index={4}>\r\n        Item Five\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        Item Six\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        Item Seven\r\n      </TabPanel> */}\r\n    </div>\r\n       \r\n        // <nav className='navbar navbar-inverse bg-danger'>\r\n        //   <Link to='/api/v1/' className='navbar-brand'>TeamWorks Ng </Link>\r\n        //   <div className='container-fluid'>\r\n        //     <div className=\"navbar-header\">\r\n        //       <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n        //         <span className=\"icon-bar\"></span>\r\n        //         <span className=\"icon-bar\"></span>\r\n        //         <span className=\"icon-bar\"></span> \r\n        //         <span className=\"icon-bar\"></span>                      \r\n        //       </button>\r\n        //     </div>\r\n        //     <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n        //       <ul className=\"nav navbar-nav\">\r\n        //         <li> <NavLink to='/api/v1/feeds'>About</NavLink></li>\r\n        //         <li><NavLink to='/api/v1/articles'> Contact Admin </NavLink></li>\r\n        //         <li><NavLink to='/api/v1/gifs'>Tour</NavLink></li>\r\n        //         <li><NavLink to={route}>{heading}</NavLink></li>\r\n        //       </ul>\r\n        //     </div>\r\n        //   </div>\r\n        // </nav>\r\n      \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\n\r\nclass Form extends React.Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      firstName: this.firstName.value,\r\n      lastName: this.lastName.value,\r\n      email: this.email.value,\r\n      password: this.password.value,\r\n      gender: this.gender.value,\r\n      jobRole: this.jobRole.value,\r\n      department: this.department.value,\r\n      address: this.address.value\r\n    }\r\n    const url = 'https://teamworksng.herokuapp.com/api/v1/auth/create-user';\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \"+ ls.get('token')\r\n      },\r\n      mode: 'cors'\r\n    })\r\n    .then( res => res.json())\r\n    .then ( response => {\r\n      console.log(response);\r\n      const path = '/api/v1/admin';\r\n      this.props.history.push(path)\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form className=\"create\" onSubmit={this.handleSubmit}>\r\n            <h3> Create New Employee Profile</h3>\r\n            <label>\r\n              <input type='text' name='firstName' placeholder='First Name' ref={(input) => this.firstName = input}/>\r\n            </label><br />\r\n            <label>\r\n              <input type='text' name='lastName' placeholder='Last Name' ref={(input) => this.lastName = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <input type='email' name='email' placeholder='Email' ref={(input) => this.email = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <input type='password' name='password' placeholder='Temporary Password' ref={(input) => this.password = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <p>Gender</p>\r\n              <select name='gender' ref={(input) => this.gender = input}>\r\n                <option value='Male'>Male</option>\r\n                <option value='Female'>Female</option>\r\n              </select>\r\n            </label><br /><br />\r\n            <label>\r\n              <input type='text' name='jobRole' placeholder='Job Role' ref={(input) => this.jobRole = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <input type='text' name='department' placeholder='Department' ref={(input) => this.department = input} required/>\r\n            </label><br />\r\n            <label>\r\n              <input type='text' name='address' placeholder='Address' ref={(input) => this.address = input} required/> \r\n            </label> <br />\r\n            <label>\r\n              <input type='submit' value='Submit' />\r\n            </label>\r\n          </form>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './CSS/CreateEmployee.css';\r\nimport { Route, NavLink, withRouter } from 'react-router-dom';\r\nimport Form from './Forms/Form';\r\n\r\nclass CreateEmployee extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className='rule dashhead'><span className='material-icons'>dashboard</span> Dashboard</h1>\r\n        <div className='rule dashboard'>\r\n          <button> <i className='material-icons md-10'>edit</i><span> Edit Profile</span> </button>\r\n          <button> <NavLink to='/admin/changePassword'><i className='material-icons md-10'>restore</i> <span> Change Password</span></NavLink> </button> \r\n          <button><NavLink to={`${this.props.match.url}/createUser`}><i className='material-icons md-10'>how_to_reg</i> <span>New Employee</span></NavLink></button>\r\n          <button><i className='material-icons md-10'>delete</i> <span> Delete Articles</span></button>\r\n          <button><i className='material-icons md-10'>delete</i> <span> Delete Gifs</span> </button>\r\n          <button><i className='material-icons md-10'>delete</i> <span> Delete Comments </span></button>\r\n        </div>\r\n\r\n        <Route path={`${this.props.match.url}/createUser`} component={Form} />  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateEmployee);\r\n","import React from 'react';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport './CSS/Home.css';\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (  \r\n      <div className='homepage'>      \r\n        <h2> This is the home page</h2>\r\n        <p> \r\n          <h4>Kindly Enter your user name and password and select Employee </h4> <br />\r\n          <h6>You can do the following on this page for now</h6> <br />\r\n          1) You can post an article for a starter, your article can have a title and body message <br />\r\n          2) You can post only gif images with a title <br />\r\n          3) You can delete your own articles and gifs <br />\r\n          4) You can delete your own comments <br />\r\n          5) You can make comments on articles and gifs posted by others <br />\r\n          6) You can view Articles and Gifs posted by others when you click on the feeds tab <br />\r\n\r\n        </p>\r\n        <button><Link to='/api/v1/auth/signin'> Enter the Site</Link> </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React from 'react';\r\nimport './CSS/SignIn.css';\r\nimport {withRouter} from 'react-router';\r\nimport ls from 'local-storage';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nclass SignIn extends React.Component {\r\n  componentDidMount() {\r\n    console.log(this.email, this.password)\r\n  }\r\n  handleSubmission = (e) => {\r\n    e.preventDefault();\r\n    const url = \"https://teamworksng.herokuapp.com/api/v1/auth/signin\";\r\n    const data = {email: this.email.value, password: this.password.value}\r\n    fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      ls.set('userDetails', result.data.allDetails);\r\n      ls.set('profile_pic', result.data.allDetails.profile_pic);\r\n      this.setToken(result.data.token, result.data.userId, result.data.userName);\r\n      if(this.admin.checked) {\r\n        this.props.history.push('/api/v1/admin');\r\n      } else if(this.emp.checked) {\r\n        this.props.history.push('/api/v1/employee/feed');\r\n      } \r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  setToken = (token, userId, userName) => {\r\n    ls.set('token', token);\r\n    ls.set('userId', userId);\r\n    ls.set('userName', userName);\r\n    setTimeout(() => {\r\n      this.props.history.push('/signout');\r\n      ls.remove('token');\r\n      ls.remove('userId');\r\n      ls.remove('userName');\r\n      ls.remove('profile_pic');\r\n      ls.remove('userDetails');\r\n    }, 600000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"signinBody\"> \r\n        <form onSubmit={this.handleSubmission} noValidate autoComplete=\"off\">\r\n            <h2>Sign In</h2>  \r\n            <div className='inputDiv'>            \r\n            <TextField\r\n              type='email'\r\n              variant='outlined'\r\n              required\r\n              inputRef={ input => this.email = input}\r\n              autoFocus={true}\r\n              label=\"Email\"\r\n              className='signInput'\r\n            />\r\n            </div>\r\n            <div className='inputDiv'>\r\n            <TextField\r\n              type='password'\r\n              variant='outlined'\r\n              required\r\n              inputRef={(input) => this.password = input}\r\n              label=\"Password\"\r\n              className='signInput'\r\n            />\r\n            </div>\r\n\r\n            <label>\r\n              <input type=\"radio\" name='role' value='admin' ref={(input) => this.admin = input} disabled required/><span> Admin</span>\r\n              <input type=\"radio\" name='role' value='employee' ref={(input) => this.emp = input} required/><span> Employee</span>\r\n            </label><br />\r\n            <label>\r\n              <input type=\"submit\" />\r\n            </label>\r\n          </form> \r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default withRouter(SignIn);\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PostArticle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      article: '',\r\n      articleClass: 'hidden'\r\n    }\r\n  }\r\n  handleSubmission = (e) => {  \r\n    e.preventDefault()  ;\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles`;\r\n    const data = {title: this.title.value, article: this.article.value, tag: this.select.value};\r\n    fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then( res => res.json())\r\n    .then( response => {\r\n      this.props.history.push(`/api/v1/employee/articles/get/${response.data.articleId}`);\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='articlePost'>\r\n        <form onSubmit={this.handleSubmission}>\r\n          <h3>Post an Article</h3>\r\n          <label>\r\n          <input type='text' name='title' placeholder='Title' ref={(input) => this.title = input}/>\r\n          </label>\r\n          <label>\r\n            <p>Tag</p>\r\n          <select ref={(input) => this.select = input}>\r\n            <option> Commerce </option> <option> Finance </option> <option> Politics </option>\r\n            <option> Science </option><option> Economy </option> <option> Religion </option>\r\n          </select>\r\n          </label> <br />\r\n          <label>\r\n          <textarea name='article' ref={(input) => this.article = input} rows='15' cols='100' placeholder='Article' />\r\n          </label><br />\r\n          <button className='button' type='submit'> Post Article</button>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(PostArticle);\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PostGif extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: '',\r\n      imgClass: 'hidden'\r\n    }\r\n  }\r\n  postGif = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('image', e.target['gifPost'].files[0] );\r\n    formData.append('title', e.target['title'].value );\r\n    const url = 'https://teamworksng.herokuapp.com/api/v1/gifs';\r\n    fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      },\r\n      body: formData\r\n    })\r\n    .then(res => res.json())\r\n    .then(response => {\r\n      this.props.history.push(`/api/v1/employee/gifs/get`);\r\n    })\r\n    .catch( e => console.error(e))\r\n  }\r\n  showImage = (e) => {\r\n    if(e.target.files[0]) {\r\n      const path = URL.createObjectURL(e.target.files[0]);\r\n      this.setState((prevState) => {\r\n        prevState.img = path;\r\n        prevState.imgClass = 'seen';\r\n        return {\r\n          img: prevState.img,\r\n          imgClass: prevState.imgClass\r\n        }\r\n      });\r\n    } else if(!e.target.files[0]) {\r\n      this.setState({\r\n        img: '',\r\n        imgClass: 'hidden'\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className='gifPost'>\r\n        <form encType=\"multipart/form-data\" name=\"GifPost\" onSubmit={this.postGif}>\r\n          <p> Gif Title</p>\r\n          <input type='text' name='title' placeholder='Gif Title' id='gifTitle'></input>\r\n          <input type='file' name='gifPost' ref={(input) => this.img = input} onChange={this.showImage} accept=\"image/gif\" /><br />\r\n          <img src={this.state.img} className={this.state.imgClass} alt='gif upload'/>\r\n          <button className='button'> Upload </button>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(PostGif);\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\n\r\nclass Comment extends React.Component {\r\n  state = {\r\n    flag: '',\r\n    up: 0,\r\n    down: 0,\r\n    status: '',\r\n    id: this.props.Id\r\n  }\r\n  flag = () => {\r\n    this.setState({flag: this.state.flag === '' ? 'flag' : ''})\r\n  }\r\n  removeComment = (id) => {\r\n    this.props.removeComment(id);\r\n  }\r\n  deleteComment = () => {\r\n    const commentId = this.props.comment.commentid;\r\n    const Id = this.props.Id\r\n    let res;\r\n    if(this.props.type === 'gifs') {\r\n      res = 'gifs';\r\n    } else if (this.props.type === 'articles') {\r\n      res = 'articles';\r\n    }\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/${res}/${Id}/commented/${commentId}`;\r\n    fetch(url, {\r\n      method: 'DELETE',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.removeComment(this.props.Id);\r\n    })\r\n  }\r\n  countUp = () => {\r\n    this.setState((prevState) => {\r\n      prevState.up = 1;\r\n      return {\r\n        up: prevState.up\r\n      }\r\n    });\r\n  }\r\n  countDown = () => {\r\n    this.setState((prevState) => {\r\n      prevState.down = 1;\r\n      return {\r\n        down: prevState.down\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    const newDate = Date(this.props.comment.createdon)\r\n    return (\r\n      <div className='commentDiv'>\r\n        <span>{this.props.comment.authorid} {this.props.comment.commentid} </span>\r\n        <p>{this.props.comment.comment} </p>\r\n        <span>{newDate}</span>\r\n        <div className='icons'>\r\n          <span onClick={this.countUp} ><i className=\"fas fa-thumbs-up fa-1x\" />{this.state.up} </span>\r\n          <span onClick={this.countDown}><i className=\"fas fa-thumbs-down fa-1x\" />{this.state.down} </span>\r\n          <span onClick={this.flag}><i className={`fas fa-flag fa-1x ${this.state.flag}`} /> </span>\r\n          <span><i className=\"fas fa-comment fa-1x\" /></span>\r\n          <span onClick={this.deleteComment} ><i className=\"fas fa-minus-circle fa-1x\"></i> </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\n\r\nclass PostComment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      display: ''\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    const uri = this.props.item;\r\n    const id = this.props.id\r\n    e.preventDefault();\r\n    const data = {\r\n      comment: this.comment.value\r\n    }\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/${uri}/${id}/comment`;\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \"+ ls.get('token')\r\n      },\r\n      mode: 'cors'\r\n    })\r\n    .then( res => res.json())\r\n    .then ( response => {\r\n      this.setState({display: ''})\r\n      this.props.addComment(this.comment.value);\r\n      this.comment.value = '';\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"comment\" onSubmit={this.handleSubmit} style={{display: this.state.display}}>\r\n        <h4> Leave a Comment </h4>\r\n        <label>\r\n          <input type='textarea' name='comment' column='50' placeholder='Leave a comments' ref={(input) => this.comment = input} required/>\r\n        </label><br />\r\n        <button type='submit'>Submit</button>\r\n      </form>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default PostComment;\r\n","import React from 'react';\r\nimport Comment from '../Comment';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport ls from 'local-storage';\r\nimport PostComment from '../PostComment';\r\n\r\nclass Article extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      up: 0,\r\n      down: 0,\r\n      flag: '',\r\n      commentClass: 'hidden',\r\n      id: this.props.article.id,\r\n      article: this.props.article,\r\n      comments: this.props.article.comments,\r\n      display: ''\r\n    }\r\n  }\r\n  reveal = () => {\r\n    this.setState({\r\n      commentClass: this.state.commentClass === 'seen' ? 'hidden' : 'seen'\r\n    });\r\n  }\r\n  removeComment = (id) => {\r\n    const comm = this.state.comments.filter( comment => comment.commentid !== id);\r\n    this.setState(prevState => {\r\n      prevState.comments = comm;\r\n      return {\r\n        comments: prevState.comments\r\n      }\r\n    });\r\n  }\r\n  flag = () => {\r\n    this.setState({flag: this.state.flag === '' ? 'flag' : ''})\r\n  }\r\n  countUp = () => {\r\n    this.setState((prevState) => {\r\n      prevState.up = 1;\r\n      return {\r\n        up: prevState.up\r\n      }\r\n    });\r\n  }\r\n  countDown = () => {\r\n    this.setState((prevState) => {\r\n      prevState.down = 1;\r\n      return {\r\n        down: prevState.down\r\n      }\r\n    });\r\n  }\r\n  delete = () => {\r\n    const articleId = this.state.id\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles/${articleId}`;\r\n    fetch(url, {\r\n      method: 'DELETE',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then(() => {\r\n      this.setState(prevState => {\r\n        prevState.display = 'none';\r\n        return {\r\n          display: prevState.display\r\n        }\r\n      });\r\n    })\r\n  }\r\n  addComment = (comment) => {\r\n    let comments = {};\r\n    if(this.state.comments === undefined) {\r\n      comments.commentid = 1;\r\n      comments.comment = comment;\r\n      this.setState({comments: [comments]})\r\n    } else {\r\n      comments.commentid = this.state.comments.length + 1;\r\n      comments.comment = comment;\r\n      this.setState(prevState => {\r\n        const newComm = this.state.comments;\r\n        newComm.push(comments);\r\n        prevState.comments = newComm;\r\n        return {\r\n          comments: prevState.comments\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n  render() {\r\n    const article = this.state.article;\r\n    const Comments = this.state.comments;\r\n    let comment = 0\r\n    if(Comments) {\r\n      comment = Comments.length;\r\n      this.commentArray = [];\r\n      const comments = Comments.filter( (comment, count) => count <= 10)\r\n      comments.forEach(comment => this.commentArray.push(<Comment comment={comment} key={comment.commentid} Id={comment.commentid} removeComment={this.removeComment} type='articles' />));\r\n    }\r\n    return (\r\n      <div className='article-container' style={{display: this.state.display}}>\r\n        <div className='article'>\r\n          { this.props.match.params.id ? <h2>{article.title}</h2> :  <Link to={`${this.props.match.path}/${article.id}`}><h2>{article.title}</h2></Link> }\r\n          <p>{article.article }  <span> &nbsp; { article.id} </span> {article.tag? <span>&nbsp;  Tags: {article.tag}</span> : ''}</p> \r\n          <p> Article By { article.author } </p>\r\n        </div>\r\n        <div className='icons'>\r\n          <span onClick={this.countUp} ><i className=\"fas fa-thumbs-up fa-1x\" />{this.state.up} </span>\r\n          <span onClick={this.countDown}><i className=\"fas fa-thumbs-down fa-1x\" />{this.state.down} </span>\r\n          <span onClick={this.flag}><i className={`fas fa-flag fa-1x ${this.state.flag}`} /> </span>\r\n          <span onClick={this.reveal}><i className=\"fas fa-comment fa-1x\" />{comment}</span>\r\n          <span onClick={this.delete} ><i className=\"fas fa-minus-circle fa-1x\"></i> </span>\r\n        </div>\r\n        <div className={this.state.commentClass+` comments`}>\r\n          <ul>\r\n            <PostComment item='articles' id={article.id} addComment={this.addComment} />\r\n            {this.commentArray}\r\n          </ul>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Article);\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Sort extends React.Component {\r\n\r\n  componentDidMount() {\r\n    console.log(this.select.value)\r\n  }\r\n\r\n  check = e => {\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{margin: '5px 20px'}}>\r\n        <label>Filter by Article Tag</label> <br />\r\n        <select onChange={this.check} ref={ input => this.select = input}>\r\n            <option></option>\r\n            <option>Commerce</option>\r\n            <option>Religion</option>\r\n            <option>Science</option>         \r\n        </select>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Sort);\r\n","import React from 'react';\r\nimport Article from './Article';\r\nimport ls from 'local-storage';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Sort from '../Logic/Sort';\r\n\r\nclass Articles extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      start: this.getAllArticles(),\r\n      article: '',\r\n      isLoaded: false,\r\n      upper: 9,\r\n      lower: 0,\r\n      filterText: ''\r\n    }\r\n  }\r\n  nextPage = () => {\r\n    this.setState( prevState => {\r\n      prevState.lower += 10;\r\n      prevState.upper += 10;\r\n      return {\r\n        upper: prevState.upper,\r\n        lower: prevState.lower\r\n      }\r\n    })\r\n  }\r\n  previousPage = () => {\r\n    this.setState( prevState => {\r\n      prevState.lower -= 10;\r\n      prevState.upper -= 10;\r\n      return {\r\n        upper: prevState.upper,\r\n        lower: prevState.lower\r\n      }\r\n    })\r\n  }\r\n  getAllArticles = () => {\r\n    const userId = ls.get('userId');\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles/all/${userId}`;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.setState((prevState) => {\r\n        prevState.article = result.data.articles;\r\n        prevState.isLoaded = true;\r\n        return {\r\n          article: prevState.article,\r\n          isLoaded: prevState.isLoaded\r\n        }\r\n      });\r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  sort = (order) => {\r\n\r\n  }\r\n  filterArticle = () => {\r\n    this.setState( prevState => {\r\n      prevState.filterText = this.search.value;\r\n      return {\r\n        filterText: prevState.filterText\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n      let articles = [];\r\n      if(this.state.isLoaded) {\r\n        const articlePage = this.state.article.filter( (article, count) => count >= this.state.lower && count <= this.state.upper && article.title.includes(this.state.filterText))\r\n        articlePage.forEach(article => articles.push(<Article article={article} key={article.id} />));\r\n      }\r\n    return (\r\n      <div className='articles'>\r\n        <div style={{display: 'flex'}}>\r\n        <Sort sort={this.sort} />\r\n        <input type='text' placeholder='search item by title' ref={input => this.search = input} className='searchBar' onChange={this.filterArticle} />\r\n        </div>\r\n        {articles} \r\n        {articles.length < 1 ? <h2>Start by Posting an Article or Gif photos</h2> : <div></div>} \r\n        <div>\r\n          <input type='button' value='NEXT' onClick={this.nextPage}/>\r\n          <input type='button' value='PREVIOUS' onClick={this.previousPage}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Articles);\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Article from './Article';\r\nimport ls from 'local-storage';\r\n\r\nclass SingleArticle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      start: this.getAnArticle(),\r\n      article: '',\r\n      isLoaded: false\r\n    }\r\n  }\r\n  getAnArticle = () => {\r\n    const id = this.props.match.params.id;\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/articles/${id}`;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.setState((prevState) => {\r\n        prevState.article = result.data;\r\n        prevState.isLoaded = true;\r\n        return {\r\n          article: prevState.article,\r\n          isLoaded: prevState.isLoaded\r\n        }\r\n      });\r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  render() {   \r\n    let article;\r\n    if(this.state.isLoaded) {\r\n      article = <Article article={this.state.article} />\r\n    }\r\n    return (\r\n      <div> {article} </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(SingleArticle);\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\nimport Comment from '../Comment';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PostComment from '../PostComment';\r\n\r\nclass Gif extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      up: 0,\r\n      down: 0,\r\n      flag: '',\r\n      commentClass: 'hidden',\r\n      id: this.props.gif.id,\r\n      gif: this.props.gif,\r\n      comments: this.props.gif.comments,\r\n      display: ''\r\n    }\r\n  }\r\n  reveal = () => {\r\n    this.setState({\r\n      commentClass: this.state.commentClass === 'seen' ? 'hidden' : 'seen'\r\n    });\r\n  }\r\n  flag = () => {\r\n    this.setState({flag: this.state.flag === '' ? 'flag' : ''})\r\n  }\r\n  countUp = () => {\r\n    this.setState((prevState) => {\r\n      prevState.up = 1;\r\n      return {\r\n        up: prevState.up\r\n      }\r\n    });\r\n  }\r\n  countDown = () => {\r\n    this.setState((prevState) => {\r\n      prevState.down = 1;\r\n      return {\r\n        down: prevState.down\r\n      }\r\n    });\r\n  }\r\n  removeComment = (id) => {\r\n    const comm = this.state.comments.filter( comment => comment.commentid !== id);\r\n    this.setState(prevState => {\r\n      prevState.comments = comm;\r\n      return {\r\n        comments: prevState.comments\r\n      }\r\n    });\r\n  }\r\n  delete = () => {\r\n    const gifId = this.state.id\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/gifs/${gifId}`;\r\n    fetch(url, {\r\n      method: 'DELETE',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then(() => {\r\n      this.setState(prevState => {\r\n        prevState.display = 'none';\r\n        return {\r\n          display: prevState.display\r\n        }\r\n      });\r\n    })\r\n    .catch( e => console.error(e));\r\n  }\r\n  addComment = (comment) => {\r\n    let comments = {};\r\n    if(this.state.comments === undefined) {\r\n      comments.commentid = 1;\r\n      comments.comment = comment;\r\n      this.setState({comments: [comments]})\r\n    } else {\r\n      comments.commentid = this.state.comments.length + 1;\r\n      comments.comment = comment;\r\n      this.setState(prevState => {\r\n        const newComm = this.state.comments;\r\n        newComm.push(comments);\r\n        prevState.comments = newComm;\r\n        return {\r\n          comments: prevState.comments\r\n        }\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const gif = this.state.gif;\r\n    const Comments = this.state.comments;\r\n    let comment = 0\r\n    if(Comments) {\r\n      comment = Comments.length;\r\n      this.commentArray = [];\r\n      const comments = Comments.filter( (comment, count) => count <= 10)\r\n      comments.forEach(comment => this.commentArray.push(<Comment comment={comment} key={comment.commentid} Id={comment.commentid} removeComment={this.removeComment} type='gifs' />));\r\n    }\r\n    \r\n    return (\r\n      <div className='gif-container' style={{display: this.state.display}}>\r\n        <div className='gif'>\r\n        { this.props.match.params.id ? <h2> {gif.title}</h2> : <Link to={`${this.props.match.path}/${gif.id}`}> <h2> {gif.title}</h2>  </Link> }\r\n        <img src={gif.url} alt='gif Post'></img>\r\n        <p> Gif by {gif.author} </p>\r\n        </div>\r\n        <div className='icons'>\r\n          <span onClick={this.countUp} ><i className=\"fas fa-thumbs-up fa-1x\" />{this.state.up} </span>\r\n          <span onClick={this.countDown}><i className=\"fas fa-thumbs-down fa-1x\" />{this.state.down} </span>\r\n          <span onClick={this.flag}><i className={`fas fa-flag fa-1x ${this.state.flag}`} /> </span>\r\n          <span onClick={this.reveal}><i className=\"fas fa-comment fa-1x\" />{comment}</span>\r\n          <span onClick={this.delete} ><i className=\"fas fa-minus-circle fa-1x\"></i> </span>\r\n        </div>\r\n        <div className={this.state.commentClass+` comments`}>\r\n          <ul>\r\n            <PostComment item='gifs' id={gif.id} addComment={this.addComment} />\r\n            {this.commentArray}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Gif);\r\n","import React from 'react';\r\nimport Gif from './Gif';\r\nimport ls from 'local-storage';\r\n\r\nclass Gifs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      start: this.getAllGifs(),\r\n      Gifs: '',\r\n      isLoaded: false,\r\n      upper: 9,\r\n      lower: 0,\r\n      filterText: '',\r\n    }\r\n  }\r\n  nextPage = () => {\r\n    this.setState( prevState => {\r\n      prevState.lower += 10;\r\n      prevState.upper += 10;\r\n      return {\r\n        upper: prevState.upper,\r\n        lower: prevState.lower\r\n      }\r\n    })\r\n  }\r\n  previousPage = () => {\r\n    this.setState( prevState => {\r\n      prevState.lower -= 10;\r\n      prevState.upper -= 10;\r\n      return {\r\n        upper: prevState.upper,\r\n        lower: prevState.lower\r\n      }\r\n    })\r\n  }\r\n  getAllGifs = () => {\r\n    const userId = ls.get('userId');\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/gifs/all/${userId}`;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.setState((prevState) => {\r\n        prevState.Gifs = result.data;\r\n        prevState.isLoaded = true;\r\n        return {\r\n          Gifs: prevState.Gifs,\r\n          isLoaded: prevState.isLoaded\r\n        }\r\n      });\r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  filterGif = () => {\r\n    this.setState( prevState => {\r\n      prevState.filterText = this.search.value;\r\n      return {\r\n        filterText: prevState.filterText\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    let gifs = [];\r\n      if(this.state.isLoaded) {\r\n        const gifPage = this.state.Gifs.filter( (gif, count) => count >= this.state.lower && count <= this.state.upper && gif.title.includes(this.state.filterText));\r\n        gifPage.forEach(gif => gifs.push(<Gif gif={gif} key={gif.id} />));\r\n      }\r\n    return (\r\n      <div className='gifs'>\r\n         <input type='text' placeholder='search item by title' ref={input => this.search = input} className='searchBar' onChange={this.filterGif} />\r\n        {gifs}\r\n        {gifs.length < 1 ? <h2>Start by Posting an Article or Gif photos</h2> : <div></div>}\r\n        <div>\r\n          <input type='button' value='NEXT' onClick={this.nextPage}/>\r\n          <input type='button' value='PREVIOUS' onClick={this.previousPage}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gifs;\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Gif from './Gif';\r\nimport ls from 'local-storage';\r\n\r\nclass SingleGif extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      start: this.getAGif(),\r\n      gif: '',\r\n      isLoaded: false\r\n    }\r\n  }\r\n  getAGif = () => {\r\n    const id = this.props.match.params.id;\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/gifs/${id}`;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n      this.setState((prevState) => {\r\n        prevState.gif = result.data;\r\n        prevState.isLoaded = true;\r\n        return {\r\n          gif: prevState.gif,\r\n          isLoaded: prevState.isLoaded\r\n        }\r\n      });\r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  render() {\r\n    let gif;\r\n    if(this.state.isLoaded) {\r\n      gif = <Gif gif={this.state.gif} />\r\n    }\r\n    return (\r\n      <div> {gif} </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(SingleGif);\r\n","import React from 'react';\r\nimport Article from '../Articles/Article';\r\nimport Gif from '../Gifs/Gif';\r\nimport ls from 'local-storage';\r\n\r\nclass FeedPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      start: this.getFeeds(),\r\n      feeds: '',\r\n      isLoaded: false,\r\n      filterText: ''\r\n    }\r\n  }\r\n  getFeeds = () => {\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/feed`;\r\n    fetch(url, {\r\n      mode: 'cors',\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      }\r\n    })\r\n    .then( res => res.json())\r\n    .then( response => {\r\n      this.setState({feeds: response.data});\r\n    })\r\n  }\r\n  filterArticle = () => {\r\n    this.setState( prevState => {\r\n      prevState.filterText = this.search.value;\r\n      return {\r\n        filterText: prevState.filterText\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    let feedPage = [];\r\n    if(this.state.feeds) {\r\n      this.state.feeds.forEach(element => {\r\n        if(element.url && element.title.includes(this.state.filterText)) feedPage.push(<Gif gif={element} key={element.id} />);\r\n        if(element.article && element.title.includes(this.state.filterText)) feedPage.push(<Article article={element} key={element.id} />);\r\n      });\r\n    }\r\n    return (\r\n      <div> \r\n        <input type='text' placeholder='search item by title' ref={input => this.search = input} className='searchBar' onChange={this.filterArticle} />\r\n        {feedPage}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FeedPage;\r\n","import React from 'react';\r\nimport ls from 'local-storage';\r\n\r\nclass Profile extends React.Component { \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      start: this.getProfile(),\r\n      profile: '',\r\n      profilePic: '',\r\n    }\r\n  }\r\n  getProfile = () => {\r\n    const userId = ls.get('userId');\r\n    const url = `https://teamworksng.herokuapp.com/api/v1/profile/${userId}`;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + ls.get('token'),\r\n      },\r\n    })\r\n    .then( res => res.json())\r\n    .then( response => {\r\n      // response.data contains message and imageUrl keys\r\n      this.setState({profile: response.data.profile })\r\n    })\r\n    .catch(e => console.error(e))\r\n  }\r\n  uploadPic = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('image', e.target['image'].files[0] );\r\n    const url = 'https://teamworksng.herokuapp.com/api/v1/profile';\r\n    fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + ls.get('token')\r\n      },\r\n      body: formData,\r\n    })\r\n    .then(res => res.json())\r\n    .then(response => {\r\n      ls.set('profile_pic', response.data.imageUrl);\r\n      this.props.pp();\r\n      this.pic.value = '';\r\n    })\r\n    .catch( e => console.error(e));\r\n  }\r\n  render() {\r\n    const user = ls.get('userDetails');\r\n    return (\r\n      <div className='profile'>\r\n        <h4>Profile</h4>\r\n        <div>\r\n          <p><strong>First Name:</strong>  {user.firstName} </p>\r\n          <p><strong>Last Name:</strong> {user.lastName} </p>\r\n          <p><strong>Gender:</strong> {user.gender} </p>\r\n          <p><strong>Email:</strong> {user.email} </p>\r\n          <p><strong>Address:</strong> {user.address || 'Lagos Nigeria'} </p>\r\n          <p><strong>Department:</strong> {user.department} </p>\r\n          <p><strong>Job Role:</strong> {user.jobRole} </p>\r\n        </div>\r\n        <div>\r\n          <h4> Edit Profile</h4>\r\n          <form encType=\"multipart/formdata\" name=\"image\" onSubmit={this.uploadPic}>\r\n            <label>Upload profile pics</label>\r\n            <input type='file' name='image' ref={ input => this.pic = input } onChange={this.setProfilePic} accept='image/**' ></input>\r\n            <input type='submit' ></input>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass Chat extends React.Component { \r\n  render() {  \r\n    return (  \r\n      \r\n      <Container maxWidth=\"fixed\">\r\n        <Typography component=\"div\" style={{backgroundColor: '#cfe8fc', height: '100vh'}} >\r\n         <div className='chat'>      \r\n        <h2> Chat room</h2>\r\n        <section className='user-name'>\r\n          <input type='text' name='user-name'  />\r\n        </section>\r\n        <section className='feedback'>\r\n          <section className='chat-room'></section>\r\n        </section>\r\n        <section className='message'>\r\n          <input type='text' name='message' />\r\n          <button onClick={this.chat} >Click</button>\r\n        </section>\r\n      </div>\r\n      </Typography>\r\n      </Container>     \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Chat);\r\n","import React from 'react';\r\nimport {Route, NavLink, withRouter} from 'react-router-dom';\r\nimport PostArticle from './Articles/PostArticle';\r\nimport PostGif from './Gifs/PostGif';\r\nimport Articles from './Articles/Articles';\r\nimport SingleArticle from './Articles/SingleArticle';\r\nimport Gifs from './Gifs/Gifs';\r\nimport SingleGif from './Gifs/SingleGif';\r\nimport FeedPage from './Feeds/FeedPage';\r\nimport ls from 'local-storage';\r\nimport Profile from './Profile';\r\nimport Chat from './Chat';\r\n\r\nclass Employee extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      employee: 'Oluwatosin Fetuga',\r\n      profile_pic: ls.get('profile_pic')\r\n    }\r\n  }\r\n  setPic = () => {\r\n    this.setState({profile_pic: ls.get('profile_pic')})\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h1 className='rule dashhead'><span className='material-icons'>dashboard</span> Dashboard</h1>\r\n          <div className='employee-dashboard'>\r\n           <h3> Welcome {ls.get('userName')} </h3> \r\n           <img src={this.state.profile_pic} className='pic' alt='profile pics' width=\"20\" heigth=\"30\"></img>\r\n           \r\n            <div className='rule dashboard'>\r\n              <button><NavLink to={`${this.props.match.url}/profile`}> <i className='material-icons md-10'>edit</i> <i className='dashed'>Profile</i></NavLink></button>\r\n              <button><NavLink to={`${this.props.match.url}/gifs/get`}> <i className='material-icons md-10'>photo</i><i className='dashed'>Gifs</i></NavLink> </button>\r\n              <button><NavLink to={`${this.props.match.url}/articles/get`}><i className='material-icons md-10'>view_list</i><i className='dashed'>Articles</i></NavLink></button>\r\n              <button><NavLink to={`${this.props.match.url}/gifs`}><i className='material-icons md-10'>image</i><i className='dashed'>Post Gif</i></NavLink></button>\r\n              <button><NavLink to={`${this.props.match.url}/articles`}><i className='material-icons md-10'>add_box</i><i className='dashed'>Post Article</i></NavLink></button>\r\n              <button><NavLink to={`${this.props.match.url}/feed`}><i className='material-icons md-10'>forum</i><i className='dashed'>Feeds</i></NavLink> </button>\r\n              <button><NavLink to={`${this.props.match.url}/chat`}><i className='material-icons md-10'>message</i><i className='dashed'>Chat</i></NavLink> </button>\r\n          \r\n            </div>\r\n          </div>\r\n          \r\n          <div className='display'>  \r\n          </div>\r\n        </div>\r\n        <Route exact path={`${this.props.match.path}/gifs`}> <PostGif /> </Route>\r\n        <Route exact path={`${this.props.match.path}/articles`}> <PostArticle /></Route>\r\n        <Route exact path={`${this.props.match.path}/articles/get`}> <Articles /></Route>\r\n        <Route path={`${this.props.match.path}/articles/get/:id`} render={() => <SingleArticle />} />\r\n        <Route exact path={`${this.props.match.path}/gifs/get`} > <Gifs /> </Route>\r\n        <Route path={`${this.props.match.path}/gifs/get/:id`} render={() => <SingleGif />} />\r\n        <Route path={`${this.props.match.path}/feed`} render={() => <FeedPage />} />\r\n        <Route path={`${this.props.match.path}/profile`} render={() => <Profile pp={this.setPic} />} />\r\n        <Route path={`${this.props.match.path}/chat`} render={() => <Chat />} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Employee);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ls from 'local-storage';\r\n\r\nclass SignOut extends React.Component { \r\n  componentDidMount() {\r\n    ls.remove('token');\r\n    ls.remove('userId');\r\n    ls.remove('userName');\r\n    ls.remove('profile_pic');\r\n    ls.remove('userDetails');\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='signout'>\r\n        <Link to='/api/v1/auth/signin' > <h2>Go back home</h2>  </Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignOut;","import React from 'react';\r\nimport './App.css';\r\nimport Footer from './Footer';\r\nimport Header from './Components/Header';\r\nimport Admin from './Components/Admin';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from './Components/Home';\r\nimport SignIn from './Components/SignInComponent';\r\nimport Employee from './Components/Employee';\r\nimport SignOut from './Components/SignOut';\r\n\r\nclass App extends React.Component {\r\n \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Switch >\r\n            <Route exact path='/' render={() => <Home /> }  />\r\n            <Route path='/signout' render={() => <SignOut setHead={this.setOut} /> }  />\r\n            <Route exact path='/api/v1/auth/signin' render={() => <SignIn setHead={this.setHead} /> }  />\r\n            <Route path='/api/v1/admin' render={() => <Admin />} />          \r\n            <Route path='/api/v1/employee' render={ () => <Employee />} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}